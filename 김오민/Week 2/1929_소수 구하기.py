m, n = map(int, input().split())

if m == 1:  # 1은 소수가 아니다
    m = m + 1

sample = [True] * (n - m + 1) #m과 n 사이 만큼의 Boolean list
n_square = int(n ** 0.5) #n의 제곱근 이하의 정수 까지로만 나누어야 한다

#원래 이러는게 아닌거 같지만...
#범위가 1,000,000이 최대이므로 사실상 1,000까지의 소수만 미리 알고 있어도 굉장히 쉬워집니다. 뭐 그렇다구요 ^^
prime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997]

#이제 에라모르겠다 채를 이용합니다.
for i in prime:
    if i <= n_square: #이때 나누는 소수는 범위 최대값의 제곱근을 넘지 않아야 하죠
        start = max(i * i, m + (i - m % i)%i) #범위 내에서 가장 작은 i의 배수를 찾는 작업입니다. 나머지를 이용하여 m으로 부터의 거리를 구하는 거죠.
        for j in range(start, n + 1, i): #start 부터 i씩 더한 수들은 전부 소수가 아니겠죠. i의 배수이므로
            sample[j - m] = False #m이 1이 아니므로 True 인덱스에 1대1 대응하지 않으므로 좀 맞춰주겠습니다
    else:
        break #노동 끝
#출력출력
for k in range(len(sample)):
    if sample[k]:
        print(m + k)
