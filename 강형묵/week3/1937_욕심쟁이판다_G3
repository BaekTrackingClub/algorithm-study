#include <stdio.h>
#include <stdlib.h>
#define INTMAX 2147483647 

int N;
int arr[501][501];
int dp[501][501];

int max(int ary[], int N){
    int cnt=0;
    for (int k = 0;k<N; k++){
        if (cnt<ary[k]){
            cnt=ary[k];
        }
    }
    return cnt;
}

int dfs(int i, int j){
    if (dp[i][j]!=-1) {return dp[i][j];}
    dp[i][j]=1;
    if ((i<N-1)&&(arr[i][j]<arr[i+1][j])){
        dp[i][j]=dfs(i+1, j)+1;
    }
    if ((j<N-1)&&(arr[i][j]<arr[i][j+1])){
        if (dp[i][j]<dfs(i,j+1)+1){
            dp[i][j]=dfs(i, j+1)+1;
        }
    }
    if ((i>0)&&(arr[i][j]<arr[i-1][j])){
        if(dp[i][j]<dfs(i-1, j)+1){
            dp[i][j]=dfs(i-1, j)+1;
            }
    }
    if ((j>0)&&(arr[i][j]<arr[i][j-1])){
        if(dp[i][j]<dfs(i, j-1)+1){
            dp[i][j]=dfs(i, j-1)+1;
            }
    }
    return dp[i][j];
}   

int main() {    
    scanf("%d", &N);
    int cnt=0;
    for (int i=0; i<N; i++){
        for (int j=0;j<N;j++){
            int k;
            scanf("%d", &k);
            arr[i][j]=k;    
            dp[i][j]=-1;
        }
    }
    for (int i=0; i<N; i++){
        for (int j=0;j<N;j++){
            dfs(i,j);
        }
    }
    int maximum[N];
    for (int i=0; i<N; i++){
        maximum[i] = max(dp[i], N);
    }
    int ans = max(maximum, N);
    printf("%d", ans);
}
